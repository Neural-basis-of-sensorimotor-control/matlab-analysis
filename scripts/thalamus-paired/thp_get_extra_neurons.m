function neurons = thp_get_extra_neurons()

% Struktur:
% 1. EXPERIMENT (sc.mat) 
% 2. FILNAMN (utan ändelse) 
% 3. KANAL 
% 4. MÄTSTART (minuter sedan start på filen, -Inf för att start från
%       början) 
% 5. MÄTSTOPP (Inf för att läsa tills filen är slut)
% 6. X POSITION FÖR PEAKS AND VALLEYS
% 7. Y POSITION FÖR PEAKS AND VALLEYS
% 8. {NAMN_PÅ_NEURON_1, NAMN_PÅ_NEURON_2}
% 9. EV MANUELL KOMMENTAR (default = '')
% 10. EV KANAL MED KOMMENTAR SOM ANGER PATCH-PIPETT DJUP (default='')
% 11. INDEX FÖR X & Y KOORDINATER

x_dummy = {[-0.31922 -0.204973 -0.125672 0.00873656 0.15793 0.278898 0.395833 ]...
[-0.397177 -0.284274 -0.170027 -0.00873656 0.145833 0.19422 0.31922 ]};
y_dummy = {[0.751592 0.629299 0.812739 3.58838 0.873885 0.522293 0.761783 ]...
[3.85987 2.73885 3.78344 18.0934 3.78344 3.1465 3.83439 ]};
indx_dummy = {{[ ] [ ] } {[1 2 3 ] [1 2 3 ] } {[ ] [ ] } {[ ] [ ] } {[ ] [ ] } {[3 4 5 ] [3 4 5 ] } {[ ] [ ] } {[ ] [ ] } {[5 6 7 ] [5 6 7 ] } {[ ] [ ] } {[ ] [ ] } {[ ] [ ] } };

data = {
  
'OFNR_sc.mat'    'OFNR0000'    'patch2'    ...
-Inf    Inf    ...
x_dummy ...
y_dummy ...
{'patch2spike1' 'patch2spike2' } ...
'' ...
'patch2' ...
indx_dummy

'OWNR_sc.mat'    'OWNR0001'    'patch'    ...
-Inf    Inf    ...
x_dummy ...
y_dummy ...
{'patch1spike1' 'patch1spike2' } ...
'' ...
'patch2' ...
indx_dummy

'OXNR_sc.mat'    'OXNR0001'    'patch'    ...
-Inf    Inf    ...
x_dummy ...
y_dummy ...
{'patch1spike1' 'patch1spike2' } ...
'' ...
'' ...
indx_dummy
};

neurons(size(data, 1)) = ScPairedSpThPoints();

for i=1:length(neurons)
  
  neurons (i) = ScPairedSpThPoints(...
    'experiment_filename',  data{i, 1}, ...
    'file_tag',             data{i, 2}, ...
    'signal_tag',           data{i, 3}, ...
    'tmin',                 data{i, 4}, ...
    'tmax',                 data{i, 5}, ...
    'x',                    data{i, 6}, ...
    'y',                    data{i, 7}, ...
    'template_tag',         data{i, 8}, ...
    'comment',              data{i, 9}  ...
    );
  
  neurons(i).protocol_signal_tag = data{i, 10};
  str_properties  = neurons(i).str_properties;
  properties_data = data{i, 11};
  
  for j=1:length(str_properties)
    
    for k=1:2
      
      new_val  = properties_data{j};
      old_vals = neurons(i).(str_properties{j});
      
      old_vals{k}                         = new_val{k};
      neurons(i).(str_properties{j}) = old_vals;
      
    end
    
  end
  
end

end
